#region class {{ClassName}}
public class {{ClassName}} : Institution<{{ClassName}}.Store>
{

    #region class Store
    public class Store : Institution.InstitutionState
    {
        {{#each Properties}}
        public {{Type}} {{Name}} { get; set; }
        {{/each}}

        public Store(Institution ei) : base(ei) {}
    }
    #endregion

    // constructor

    public {{ClassName}}() : base("{{Id}}") {
        this.Name = "{{Name}}";
        this.Description = "{{Description}}";

        // init organisations 
        this.AddOrganisations(new Organisation[] {
            {{#each Organisations}}
            new {{ClassName}}(),
            {{/each}}
        });
        

        // init roles
        this.AddRoles(new Role[] {
            {{#each Roles}}
            new {{ClassName}}(),
            {{/each}}
        });
        
        // init workflows
        this.AddWorkflows(new Workflow[] {
            {{#each Workflows}}
            new {{ClassName}}(),
            {{/each}}
        });
        
       
        this.MainWorkflowId = this.Workflows[0].Id;

        // init security

        this.AuthenticationPermissions.Add(new AuthorisationInfo[] {
            {{#each Authorisation}}
            new AuthorisationInfo("{{User}}", "{{Password}}", "{{Organisation}}"{{#each Groups}}, this.GroupById("{{OrganisationId}}", "{{RoleId}}"){{/each}}),
            {{/each}}
        });
        

        // init expressions
        {{#each Expressions}}
        this.AddExpressions(i => {{.}});
        {{/each}}
        
    }

    // abstract implementation

    public override Institution Instance => new {{ClassName}}();

    public override Institution.InstitutionState Resources => new {{ClassName}}.Store(this);
}
#endregion
